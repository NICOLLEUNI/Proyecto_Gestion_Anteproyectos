/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package co.unicauca.workflow.presentation;

import co.unicauca.workflow.domain.entities.User;
import co.unicauca.workflow.domain.entities.enumProgram;
import co.unicauca.workflow.domain.entities.enumRol;
import co.unicauca.workflow.access.UserRepository;
import co.unicauca.workflow.access.IUserRepository;
import co.unicauca.workflow.domain.service.UserService;
import java.awt.Color;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.JTextField;

/**
 *
 * @author User
 */
public class GUISingIn extends javax.swing.JFrame {
private final UserService userService;
    /**
     * Creates new form GUISingIn
     */
    public GUISingIn() {
        initComponents();
         IUserRepository repo = new UserRepository(); // conecta con SQLite
    this.userService = new UserService(repo);
    }
    



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BackGround = new javax.swing.JPanel();
        lblLogoR = new javax.swing.JLabel();
        pnlBack = new javax.swing.JPanel();
        lblTitulo = new javax.swing.JLabel();
        lblCelular = new javax.swing.JLabel();
        lblNombre = new javax.swing.JLabel();
        lblApellidos = new javax.swing.JLabel();
        lblPrograma = new javax.swing.JLabel();
        lblContraseniaR = new javax.swing.JLabel();
        lblRol = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        pnlBttRegistrar = new javax.swing.JPanel();
        lblBttRegistrar = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        txtCelular = new javax.swing.JTextField();
        txtContrasenia = new javax.swing.JPasswordField();
        CBDocente = new javax.swing.JCheckBox();
        CBEstudiante = new javax.swing.JCheckBox();
        ComBoxPrograma = new javax.swing.JComboBox<>();
        jSeparator8 = new javax.swing.JSeparator();
        txtNombre = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        jSeparator9 = new javax.swing.JSeparator();
        jSeparator10 = new javax.swing.JSeparator();
        jSeparator11 = new javax.swing.JSeparator();
        txtApellidos = new javax.swing.JTextField();
        jSeparator12 = new javax.swing.JSeparator();
        jSeparator13 = new javax.swing.JSeparator();
        jSeparator14 = new javax.swing.JSeparator();
        jSeparator15 = new javax.swing.JSeparator();
        BgImage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocationByPlatform(true);
        setResizable(false);

        BackGround.setBackground(new java.awt.Color(0, 64, 128));
        BackGround.setPreferredSize(new java.awt.Dimension(910, 510));
        BackGround.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblLogoR.setIcon(new javax.swing.ImageIcon(getClass().getResource("/co/unicauca/workflow/presentation/images/LogoPequeño.png"))); // NOI18N
        lblLogoR.setText("jLabel1");
        BackGround.add(lblLogoR, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 163, 80));

        pnlBack.setBackground(new java.awt.Color(255, 255, 255));
        pnlBack.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTitulo.setFont(new java.awt.Font("Roboto SemiBold", 1, 36)); // NOI18N
        lblTitulo.setForeground(new java.awt.Color(0, 0, 0));
        lblTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitulo.setText("REGISTRO");
        pnlBack.add(lblTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 310, 50));

        lblCelular.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        lblCelular.setForeground(new java.awt.Color(0, 0, 0));
        lblCelular.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCelular.setText("Celular");
        pnlBack.add(lblCelular, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 200, 60, -1));

        lblNombre.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        lblNombre.setForeground(new java.awt.Color(0, 0, 0));
        lblNombre.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNombre.setText("Nombres");
        pnlBack.add(lblNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 120, -1, -1));

        lblApellidos.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        lblApellidos.setForeground(new java.awt.Color(0, 0, 0));
        lblApellidos.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblApellidos.setText("Apellidos");
        pnlBack.add(lblApellidos, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 110, -1, -1));

        lblPrograma.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        lblPrograma.setForeground(new java.awt.Color(0, 0, 0));
        lblPrograma.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPrograma.setText("Programa Institucional");
        pnlBack.add(lblPrograma, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 200, -1, -1));

        lblContraseniaR.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        lblContraseniaR.setForeground(new java.awt.Color(0, 0, 0));
        lblContraseniaR.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblContraseniaR.setText("Contraseña");
        pnlBack.add(lblContraseniaR, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 380, -1, -1));

        lblRol.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        lblRol.setForeground(new java.awt.Color(0, 0, 0));
        lblRol.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblRol.setText("Rol");
        pnlBack.add(lblRol, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 280, -1, -1));

        lblEmail.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        lblEmail.setForeground(new java.awt.Color(0, 0, 0));
        lblEmail.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblEmail.setText("Email");
        pnlBack.add(lblEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 280, -1, -1));

        pnlBttRegistrar.setBackground(new java.awt.Color(0, 102, 204));
        pnlBttRegistrar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblBttRegistrar.setFont(new java.awt.Font("Roboto Medium", 1, 18)); // NOI18N
        lblBttRegistrar.setForeground(new java.awt.Color(255, 255, 255));
        lblBttRegistrar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblBttRegistrar.setText("REGISTRARME");
        lblBttRegistrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblBttRegistrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblBttRegistrarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblBttRegistrarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblBttRegistrarMouseExited(evt);
            }
        });

        javax.swing.GroupLayout pnlBttRegistrarLayout = new javax.swing.GroupLayout(pnlBttRegistrar);
        pnlBttRegistrar.setLayout(pnlBttRegistrarLayout);
        pnlBttRegistrarLayout.setHorizontalGroup(
            pnlBttRegistrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblBttRegistrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlBttRegistrarLayout.setVerticalGroup(
            pnlBttRegistrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblBttRegistrar, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
        );

        pnlBack.add(pnlBttRegistrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 400, 150, 40));
        pnlBack.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 170, 230, 20));

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        pnlBack.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 300, 30, 50));

        txtCelular.setBackground(new java.awt.Color(255, 255, 255));
        txtCelular.setFont(new java.awt.Font("Roboto Medium", 1, 12)); // NOI18N
        txtCelular.setForeground(new java.awt.Color(153, 153, 153));
        txtCelular.setText("Ingrese su celular");
        txtCelular.setBorder(null);
        txtCelular.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtCelularMousePressed(evt);
            }
        });
        pnlBack.add(txtCelular, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 240, 230, 20));

        txtContrasenia.setBackground(new java.awt.Color(255, 255, 255));
        txtContrasenia.setForeground(new java.awt.Color(153, 153, 153));
        txtContrasenia.setText("********");
        txtContrasenia.setBorder(null);
        txtContrasenia.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtContraseniaMousePressed(evt);
            }
        });
        pnlBack.add(txtContrasenia, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 410, 200, -1));

        CBDocente.setBackground(new java.awt.Color(255, 255, 255));
        CBDocente.setFont(new java.awt.Font("Roboto Medium", 0, 12)); // NOI18N
        CBDocente.setForeground(new java.awt.Color(0, 0, 0));
        CBDocente.setText("Docente");
        pnlBack.add(CBDocente, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 330, -1, -1));

        CBEstudiante.setBackground(new java.awt.Color(255, 255, 255));
        CBEstudiante.setFont(new java.awt.Font("Roboto Medium", 0, 12)); // NOI18N
        CBEstudiante.setForeground(new java.awt.Color(0, 0, 0));
        CBEstudiante.setText("Estudiante");
        pnlBack.add(CBEstudiante, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 330, -1, -1));

        ComBoxPrograma.setBackground(new java.awt.Color(255, 255, 255));
        ComBoxPrograma.setFont(new java.awt.Font("Roboto Medium", 0, 12)); // NOI18N
        ComBoxPrograma.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Programa", "Ingeniería de Sistemas", "Ingeniería Electrónica y Telecomunicaciones", "Automática industrial", "Tecnología en Telemática" }));
        pnlBack.add(ComBoxPrograma, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 220, 230, 30));
        pnlBack.add(jSeparator8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 430, 230, 20));

        txtNombre.setBackground(new java.awt.Color(255, 255, 255));
        txtNombre.setFont(new java.awt.Font("Roboto Medium", 1, 12)); // NOI18N
        txtNombre.setForeground(new java.awt.Color(153, 153, 153));
        txtNombre.setText("Ingrese su Nombre");
        txtNombre.setBorder(null);
        txtNombre.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtNombreMousePressed(evt);
            }
        });
        pnlBack.add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 150, 230, 20));

        txtEmail.setBackground(new java.awt.Color(255, 255, 255));
        txtEmail.setFont(new java.awt.Font("Roboto Medium", 1, 12)); // NOI18N
        txtEmail.setForeground(new java.awt.Color(153, 153, 153));
        txtEmail.setText("Ingrese su Email");
        txtEmail.setBorder(null);
        txtEmail.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtEmailMousePressed(evt);
            }
        });
        pnlBack.add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 340, 230, 20));
        pnlBack.add(jSeparator9, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 170, 230, 20));

        jSeparator10.setOrientation(javax.swing.SwingConstants.VERTICAL);
        pnlBack.add(jSeparator10, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 110, 30, 50));
        pnlBack.add(jSeparator11, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 260, 230, 20));

        txtApellidos.setBackground(new java.awt.Color(255, 255, 255));
        txtApellidos.setFont(new java.awt.Font("Roboto Medium", 1, 12)); // NOI18N
        txtApellidos.setForeground(new java.awt.Color(153, 153, 153));
        txtApellidos.setText("Ingrese sus Apellidos");
        txtApellidos.setBorder(null);
        txtApellidos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtApellidosMousePressed(evt);
            }
        });
        pnlBack.add(txtApellidos, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 150, 230, 20));
        pnlBack.add(jSeparator12, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 260, 230, 20));

        jSeparator13.setOrientation(javax.swing.SwingConstants.VERTICAL);
        pnlBack.add(jSeparator13, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 200, 30, 50));
        pnlBack.add(jSeparator14, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 360, 230, 20));
        pnlBack.add(jSeparator15, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 360, 230, 20));

        BackGround.add(pnlBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 20, 640, 470));

        BgImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        BgImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/co/unicauca/workflow/presentation/images/BackGroundSingIn.png"))); // NOI18N
        BackGround.add(BgImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 770, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BackGround, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BackGround, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtNombreMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtNombreMousePressed
    manejarPlaceHolder(txtNombre, "Ingrese su Nombre", txtEmail, txtCelular, txtApellidos);
    restaurarPlaceholderPassword(txtContrasenia);
    }//GEN-LAST:event_txtNombreMousePressed

    private void txtApellidosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtApellidosMousePressed
        manejarPlaceHolder(txtApellidos, "Ingrese sus Apellidos", txtEmail, txtCelular, txtNombre);
        restaurarPlaceholderPassword(txtContrasenia);
    }//GEN-LAST:event_txtApellidosMousePressed

    private void txtCelularMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtCelularMousePressed
         manejarPlaceHolder(txtCelular, "Ingrese su celular", txtNombre, txtEmail, txtApellidos);
        restaurarPlaceholderPassword(txtContrasenia);
    }//GEN-LAST:event_txtCelularMousePressed

    private void txtEmailMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtEmailMousePressed
        manejarPlaceHolder(txtEmail, "Ingrese su Email", txtNombre, txtCelular, txtApellidos);
        restaurarPlaceholderPassword(txtContrasenia);
    }//GEN-LAST:event_txtEmailMousePressed

    private void txtContraseniaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtContraseniaMousePressed
       // Si el campo contraseña está en modo placeholder → lo limpio
    if (String.valueOf(txtContrasenia.getPassword()).equals("********")) {
        txtContrasenia.setText("");
        txtContrasenia.setForeground(Color.BLACK);
    }

    // Si los otros campos están vacíos → les devuelvo su placeholder
    if (txtNombre.getText().isEmpty()) {
        txtNombre.setText("Ingrese su Nombre");
        txtNombre.setForeground(Color.GRAY);
    }
    if (txtEmail.getText().isEmpty()) {
        txtEmail.setText("Ingrese su Email");
        txtEmail.setForeground(Color.GRAY);
    }
    if (txtCelular.getText().isEmpty()) {
        txtCelular.setText("Ingrese su celular");
        txtCelular.setForeground(Color.GRAY);
    }
    if (txtApellidos.getText().isEmpty()) {
        txtApellidos.setText("Ingrese sus Apellidos");
        txtApellidos.setForeground(Color.GRAY);
    }
    }//GEN-LAST:event_txtContraseniaMousePressed

    private void lblBttRegistrarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBttRegistrarMouseEntered
      pnlBttRegistrar.setBackground(new Color(0,64,128));
    }//GEN-LAST:event_lblBttRegistrarMouseEntered

    private void lblBttRegistrarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBttRegistrarMouseExited
     pnlBttRegistrar.setBackground(new Color(0,102,204));
    }//GEN-LAST:event_lblBttRegistrarMouseExited

    private void lblBttRegistrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBttRegistrarMouseClicked


    String nombre = txtNombre.getText().trim();


    String apellidos = txtApellidos.getText().trim();
    String celularStr = txtCelular.getText().trim();
    String email = txtEmail.getText().trim();
    String password = String.valueOf(txtContrasenia.getPassword()).trim();

    // Validar campos vacíos
    String error = validarCampos(txtNombre, txtApellidos, txtCelular, txtEmail, txtContrasenia, CBEstudiante, CBDocente, ComBoxPrograma);
    if (error != null) {
        JOptionPane.showMessageDialog(this, error, "Error", JOptionPane.WARNING_MESSAGE);
        return;
    }

    // 🚨 Validar contraseña con UserService
    if (!userService.validatePassword(password)) {
        JOptionPane.showMessageDialog(this,
                "La contraseña debe tener mínimo 6 caracteres,\n" +
                "al menos un dígito, al menos un carácter especial\n" +
                "y al menos una mayúscula.",
                "Error", JOptionPane.WARNING_MESSAGE);
        return;
    }

    // 🚨 Validar correo institucional con UserService
    if (!userService.validateEmail(email)) {
        System.out.println("El correo debe ser institucional (@unicauca.edu.co)");
        JOptionPane.showMessageDialog(this,
                "El correo debe ser institucional (@unicauca.edu.co)",
                "Error", JOptionPane.WARNING_MESSAGE);
        return;
    }

    // Rol
    enumRol rol = CBEstudiante.isSelected() ? enumRol.ESTUDIANTE : enumRol.DOCENTE;

    // Programa
    enumProgram program = null;
    String programaSeleccionado = ComBoxPrograma.getSelectedItem().toString();
    for (enumProgram p : enumProgram.values()) {
        if (p.getDescripcion().equals(programaSeleccionado)) {
            program = p;
            break;
        }
    }


    // Manejo del celular opcional
    String celular = null; // por defecto null si no digitó nada
    if (!celularStr.isEmpty() && !celularStr.equals("Ingrese su celular")) {
        if (!celularStr.matches("\\d+")) {
            JOptionPane.showMessageDialog(this, 
                "El celular debe ser numérico", 
                "Error", 
                JOptionPane.WARNING_MESSAGE);

            return;
        }
        celular = celularStr; // Guardamos el número como String válido
    }


    // Validar si ya existe
    if (userService.userExists(email)) {
        JOptionPane.showMessageDialog(this, "El usuario con este correo ya existe", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }


    // Crear usuario

    celular = null; // valor por defecto (si no digitó nada)
    if (!celularStr.isEmpty() && !celularStr.equals("Ingrese su celular")) {
        celular = celularStr; // lo guardamos tal cual como String
    }


    // Guardar con el servicio
    boolean registrado = userService.saveUser(nombre, apellidos, celular, email, password, rol, program);

    if (registrado) {
        JOptionPane.showMessageDialog(this, "Usuario registrado exitosamente", "Éxito", JOptionPane.INFORMATION_MESSAGE);
        irALogin();
    } else {
        JOptionPane.showMessageDialog(this, "Error al registrar el usuario. Verifica los datos.", "Error", JOptionPane.ERROR_MESSAGE);
    }
       

    }//GEN-LAST:event_lblBttRegistrarMouseClicked
   
public void irALogin(){
    GUILogin ventanaLogin = new GUILogin(); // crear la nueva ventana
    ventanaLogin.setVisible(true);            // mostrarla
    this.dispose();  
   }
   public static String validarCampos(JTextField txtNombre, JTextField txtApellidos,
                                   JTextField txtCelular, JTextField txtEmail,
                                   JPasswordField txtContrasenia,
                                   JCheckBox cbEstudiante, JCheckBox cbDocente,
                                   JComboBox<String> comboPrograma) {
    
    // Extraer valores
    String nombre = txtNombre.getText().trim();
    String apellidos = txtApellidos.getText().trim();
    String celularStr = txtCelular.getText().trim();
    String email = txtEmail.getText().trim();
    String password = String.valueOf(txtContrasenia.getPassword()).trim();

    // Validar placeholders y vacíos
    if (nombre.isEmpty() || nombre.equals("Ingrese su Nombre") ||
        apellidos.isEmpty() || apellidos.equals("Ingrese sus Apellidos") ||
        email.isEmpty() || email.equals("Ingrese su Email") ||
        password.isEmpty() || password.equals("********")) 
    {
        return "Por favor completa todos los campos.";
    }

    // Validar celular numérico
    if (!celularStr.isEmpty() && !celularStr.equals("Ingrese su celular")) {
        if (!celularStr.matches("\\d+")) {
            return "El celular debe ser un número válido."; 
        }
    }



    // Validar rol
    if (!(cbEstudiante.isSelected() ^ cbDocente.isSelected())) {
        return "Debes seleccionar un único rol.";
    }

    // Validar programa
    if (comboPrograma.getSelectedItem() == null || 
        comboPrograma.getSelectedItem().toString().equals("Programa")) {
        return "Debes seleccionar un programa institucional.";
    }

    return null; // null = sin errores
}

   ///

    private void manejarPlaceHolder(JTextField campo, String placeholder, JTextField... otros) {
    // Si hago clic en este campo y está en modo placeholder → lo limpio
    if (campo.getText().equals(placeholder)) {
        campo.setText("");
        campo.setForeground(Color.BLACK);
    }
    // Si los otros campos están vacíos → les devuelvo su placeholder
    for (JTextField otro : otros) {
        if (otro.getText().isEmpty()) {
            if (otro == txtNombre) otro.setText("Ingrese su Nombre");
            if (otro == txtEmail) otro.setText("Ingrese su Email");
            if (otro == txtCelular) otro.setText("Ingrese su celular");
            if (otro == txtApellidos) otro.setText("Ingrese sus Apellidos");
            otro.setForeground(Color.GRAY);
        }
    }
}
private void restaurarPlaceholderPassword(JPasswordField campo) {
    if (String.valueOf(campo.getPassword()).isEmpty()) {
        campo.setText("********");
        campo.setForeground(Color.GRAY);
    }
}

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUISingIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUISingIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUISingIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUISingIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUISingIn().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel BackGround;
    private javax.swing.JLabel BgImage;
    private javax.swing.JCheckBox CBDocente;
    private javax.swing.JCheckBox CBEstudiante;
    private javax.swing.JComboBox<String> ComBoxPrograma;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JSeparator jSeparator11;
    private javax.swing.JSeparator jSeparator12;
    private javax.swing.JSeparator jSeparator13;
    private javax.swing.JSeparator jSeparator14;
    private javax.swing.JSeparator jSeparator15;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JLabel lblApellidos;
    private javax.swing.JLabel lblBttRegistrar;
    private javax.swing.JLabel lblCelular;
    private javax.swing.JLabel lblContraseniaR;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblLogoR;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblPrograma;
    private javax.swing.JLabel lblRol;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JPanel pnlBack;
    private javax.swing.JPanel pnlBttRegistrar;
    private javax.swing.JTextField txtApellidos;
    private javax.swing.JTextField txtCelular;
    private javax.swing.JPasswordField txtContrasenia;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
