/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package co.unicauca.workflow.presentation.views;

import co.unicauca.workflow.access.Factory;
import co.unicauca.workflow.access.IFormatoARepository;
import co.unicauca.workflow.access.IDocenteRepository;
import co.unicauca.workflow.domain.entities.Docente;
import co.unicauca.workflow.domain.entities.FormatoA;
import co.unicauca.workflow.domain.entities.FormatoAVersion;
import co.unicauca.workflow.domain.entities.Persona;
import co.unicauca.workflow.domain.entities.enumEstado;
import java.awt.BorderLayout;
import java.util.List;
import java.util.ArrayList;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
/**
 *
 * @author Usuario
 */
public class ListaFormatosAestudiantes extends javax.swing.JPanel {

     
    private Persona personaLogueada;
    private List<FormatoA> formatosUsuario;

    public ListaFormatosAestudiantes(Persona personaLogueada) {
        initComponents();
        this.personaLogueada = personaLogueada;
        initStyles();
        cargarDatos();
    }

    private void cargarDatos() {
        IFormatoARepository repo = Factory.getFormatoARepository("default");

        // Traemos todos los formatos
        List<FormatoA> todos = repo.list();
        formatosUsuario = new ArrayList<>();

        // Filtramos solo los formatos donde el usuario logueado esté como estudiante
        for (FormatoA f : todos) {
            if (f.getEstudiantes() != null) {
                f.getEstudiantes().stream()
                 .filter(e -> e.getIdUsuario() == personaLogueada.getIdUsuario())
                 .findFirst()
                 .ifPresent(e -> formatosUsuario.add(f));
            }
        }

        // Columnas de la tabla
        String[] columnas = {"Título", "Modalidad", "Estado actual", "Observaciones", "Versión"};
        DefaultTableModel modelo = new DefaultTableModel(columnas, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        // Llenamos la tabla
        for (FormatoA f : formatosUsuario) {
            enumEstado estado = f.getState() != null ? f.getState() : enumEstado.ENTREGADO;
            String observaciones = f.getObservations() != null ? f.getObservations() : "";
            int version = 1;

            // Si hay versiones, tomamos la última
            if (f.getVersiones() != null && !f.getVersiones().isEmpty()) {
                FormatoAVersion ultima = f.getVersiones().get(f.getVersiones().size() - 1);
                estado = ultima.getState();
                observaciones = ultima.getObservations() != null ? ultima.getObservations() : "";
                version = ultima.getNumeroVersion();
            }

            Object[] fila = {
                f.getTitle() != null ? f.getTitle() : "",
                f.getMode() != null ? f.getMode().name() : "N/A",
                estado.name(),
                observaciones,
                version
            };
            modelo.addRow(fila);
        }

        jTable1.setModel(modelo);
    }

    
    private void initStyles() {
        jTable1.setRowHeight(30);
        jTable1.setShowGrid(false);
        jTable1.setIntercellSpacing(new java.awt.Dimension(0, 0));
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.getTableHeader().setResizingAllowed(false);
        jTable1.getTableHeader().setFont(new java.awt.Font("Segoe UI", java.awt.Font.BOLD, 14));
        jTable1.setFont(new java.awt.Font("Segoe UI", java.awt.Font.PLAIN, 13));
        jTable1.setSelectionBackground(new java.awt.Color(33, 150, 243));
        jTable1.setSelectionForeground(java.awt.Color.WHITE);
        jScrollPane1.setBorder(javax.swing.BorderFactory.createEmptyBorder());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Contenido = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        Contenido.setBackground(new java.awt.Color(255, 255, 255));
        Contenido.setPreferredSize(new java.awt.Dimension(646, 530));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Titulo ", "Modalidad", "Estado actual", "Comentarios", "Version"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout ContenidoLayout = new javax.swing.GroupLayout(Contenido);
        Contenido.setLayout(ContenidoLayout);
        ContenidoLayout.setHorizontalGroup(
            ContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ContenidoLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 606, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );
        ContenidoLayout.setVerticalGroup(
            ContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ContenidoLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(281, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Contenido, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Contenido, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Contenido;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
