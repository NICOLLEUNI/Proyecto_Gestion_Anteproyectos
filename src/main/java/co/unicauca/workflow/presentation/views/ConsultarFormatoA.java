/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package co.unicauca.workflow.presentation.views;

import co.unicauca.workflow.access.Factory;
import co.unicauca.workflow.access.FormatoARepository;
import co.unicauca.workflow.access.IFormatoARepository;
import co.unicauca.workflow.domain.entities.Estudiante;
import co.unicauca.workflow.domain.entities.FormatoA;
import co.unicauca.workflow.domain.entities.Persona;
import co.unicauca.workflow.domain.service.FormatoAService;
import java.util.ArrayList;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author User
 */
public class ConsultarFormatoA extends javax.swing.JPanel {

    /**
     * Creates new form ConsultarFormatoA
     */
    
    private Persona personaLogueada;
    public ConsultarFormatoA(Persona personaLogueada) {
        initComponents();
        this.personaLogueada = personaLogueada; // guarda el usuario activo
        initStyles();
        cargarDatos();;
    }
private void cargarDatos() {
     
      // Obtenemos el repositorio usando la Factory
    IFormatoARepository repo = Factory.getFormatoARepository("default");

    // Traemos todos los formatos
    List<FormatoA> todos = repo.list();

    // Filtramos los formatos donde el usuario logueado sea estudiante
    List<FormatoA> lista = new ArrayList<>();
    for (FormatoA f : todos) {
        for (Estudiante est : f.getEstudiantes()) {
            if (est.getIdUsuario() == personaLogueada.getIdUsuario()) {
                lista.add(f);
                break; // Ya lo encontramos, no necesitamos revisar más estudiantes
            }
        }
    }

    // Columnas de la tabla
    String[] columnas = {"Título", "Director", "Entrega", "Estado", "Observaciones"};
    DefaultTableModel modelo = new DefaultTableModel(columnas, 0);

    // Llenamos la tabla
    for (FormatoA f : lista) {
        Object[] fila = {
            f.getTitle(),
            f.getProjectManager() != null ? f.getProjectManager().getName() : "",
            f.getDate() != null ? f.getDate().toString() : "",
            f.getState() != null ? f.getState() : "Pendiente",
            f.getObservations() != null ? f.getObservations() : ""
        };
        modelo.addRow(fila);
    }

    jTable1.setModel(modelo);
    }


     private void initStyles(){
         // Ajustes de tabla para que combine con FlatLaf
jTable1.setRowHeight(30); // filas más altas
jTable1.setShowGrid(false); // sin líneas internas
jTable1.setIntercellSpacing(new java.awt.Dimension(0, 0)); // elimina separación entre celdas

// Encabezado más estilizado
jTable1.getTableHeader().setReorderingAllowed(false);
jTable1.getTableHeader().setResizingAllowed(false);
jTable1.getTableHeader().setFont(new java.awt.Font("Segoe UI", java.awt.Font.BOLD, 14));
jTable1.getTableHeader().setBackground(new java.awt.Color(240, 240, 240));
jTable1.getTableHeader().setForeground(new java.awt.Color(50, 50, 50));

// Fuente del contenido
jTable1.setFont(new java.awt.Font("Segoe UI", java.awt.Font.PLAIN, 13));

// Selección bonita (FlatLaf ya pinta bien, pero puedes reforzar)
jTable1.setSelectionBackground(new java.awt.Color(33, 150, 243)); // azul Material
jTable1.setSelectionForeground(java.awt.Color.WHITE);

// Scroll con bordes redondeados (si usas FlatLaf extras)
jScrollPane1.setBorder(javax.swing.BorderFactory.createEmptyBorder());
     
     }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Contenido = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jSeparator8 = new javax.swing.JSeparator();

        Contenido.setBackground(new java.awt.Color(255, 255, 255));

        jScrollPane1.setBackground(new java.awt.Color(204, 204, 204));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Titulo", "Director", "Entrega", "Estado", "Observaciones"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout ContenidoLayout = new javax.swing.GroupLayout(Contenido);
        Contenido.setLayout(ContenidoLayout);
        ContenidoLayout.setHorizontalGroup(
            ContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ContenidoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator8, javax.swing.GroupLayout.DEFAULT_SIZE, 629, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(ContenidoLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        ContenidoLayout.setVerticalGroup(
            ContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ContenidoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(134, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Contenido, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Contenido, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Contenido;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
